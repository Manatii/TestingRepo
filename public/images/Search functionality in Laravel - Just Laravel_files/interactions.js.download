function Timer(a, b) { this.timerId = -1, this.start = "", this.remaining = b, this.status = "", this.cb = a, this.delay = b, this.play() } function ActionParams(a) { this.version = a, this.viewName = "", this.binded = !1 } function ActionHandler() { this.id = null, this.displayName = null, this.param = null, this.targetable = !1, this.canRunInInterLoop = !0 } function ActionsGroup(a, b) { this.id = a, this.displayName = b, this.actionsHandlers = {} } function GotoURLActionParams(a) { GotoURLActionParams.prototype.viewName = "GoToURL", this.binded = a, this.add("url", ""), this.add("delay", 0), this.add("target", "newWindow"), this.add("left", 0), this.add("top", 0), this.add("width", 100), this.add("height", 100), this.add("closeAllAdParts", !1), this.add("delay", 0) } function GotoURLActionHandler() { GotoURLActionHandler.prototype.id = "gotoURL", GotoURLActionHandler.prototype.displayName = "Goto URL", GotoURLActionHandler.prototype.param = GotoURLActionParams } function CustomClickThroughActionParams(a) { GotoURLActionParams.call(this, a), this.add("name", ""), CustomClickThroughActionParams.prototype.viewName = "CustomClickThrough" } function CustomClickThroughActionHandler() { GotoURLActionHandler.call(this), CustomClickThroughActionHandler.prototype.id = "customClickThrough", CustomClickThroughActionHandler.prototype.displayName = "Custom ClickThrough", CustomClickThroughActionHandler.prototype.param = CustomClickThroughActionParams } function TriggerCTActionParams(a) { this.binded = a, this.add("delay", 0) } function TriggerCTActionHandler() { TriggerCTActionHandler.prototype.id = "triggerCT", TriggerCTActionHandler.prototype.displayName = "Clickthrough", TriggerCTActionHandler.prototype.param = TriggerCTActionParams } function CustInterActionParams(a) { CustInterActionParams.prototype.viewName = "CustomInteraction", this.binded = a, this.add("name", ""), this.add("delay", 0) } function CustInterActionHandler() { CustInterActionHandler.prototype.id = "custInter", CustInterActionHandler.prototype.displayName = "Custom Interaction", CustInterActionHandler.prototype.param = CustInterActionParams } function VideoActionParams(a) { this.binded = a, this.add("delay", 0) } function VideoPlayActionHandler() { VideoPlayActionHandler.prototype.id = "play", VideoPlayActionHandler.prototype.displayName = "Play", VideoPlayActionHandler.prototype.param = VideoActionParams, VideoPlayActionHandler.prototype.targetable = !0 } function VideoStopActionHandler() { VideoStopActionHandler.prototype.id = "stop", VideoStopActionHandler.prototype.displayName = "Stop", VideoStopActionHandler.prototype.param = VideoActionParams, VideoStopActionHandler.prototype.targetable = !0 } function VideoPauseActionHandler() { VideoPauseActionHandler.prototype.id = "pause", VideoPauseActionHandler.prototype.displayName = "Pause", VideoPauseActionHandler.prototype.param = VideoActionParams, VideoPauseActionHandler.prototype.targetable = !0 } function VideoReplayActionHandler() { VideoReplayActionHandler.prototype.id = "replay", VideoReplayActionHandler.prototype.displayName = "Replay", VideoReplayActionHandler.prototype.param = VideoActionParams, VideoReplayActionHandler.prototype.targetable = !0 } function VideoMuteActionHandler() { VideoMuteActionHandler.prototype.id = "mute", VideoMuteActionHandler.prototype.displayName = "Mute", VideoMuteActionHandler.prototype.param = VideoActionParams, VideoMuteActionHandler.prototype.targetable = !0 } function VideoUnmuteActionHandler() { VideoUnmuteActionHandler.prototype.id = "unmute", VideoUnmuteActionHandler.prototype.displayName = "Unmute", VideoUnmuteActionHandler.prototype.param = VideoActionParams, VideoUnmuteActionHandler.prototype.targetable = !0 } function CallNumberActionParams(a) { CallNumberActionParams.prototype.viewName = "CallNumber", this.binded = a, this.add("number", ""), this.add("delay", 0) } function CallNumberActionHandler() { CallNumberActionHandler.prototype.id = "callNumber", CallNumberActionHandler.prototype.displayName = "Call Number", CallNumberActionHandler.prototype.param = CallNumberActionParams } function SMSNumberActionParams(a) { SMSNumberActionParams.prototype.viewName = "SMSNumber", this.binded = a, this.add("number", ""), this.add("delay", 0), this.add("body", ""), this.add("recipient", ""), this.add("subject", ""), this.add("fallbackToEmail", !1) } function SMSNumberActionHandler() { SMSNumberActionHandler.prototype.id = "SMSNumber", SMSNumberActionHandler.prototype.displayName = "SMS Number", SMSNumberActionHandler.prototype.param = SMSNumberActionParams } function InteractionPauseActionParams(a) { this.binded = a, this.add("delay", 0) } function InteractionStartActionParams(a) { InteractionStartActionParams.prototype.viewName = "InteractionTrigger", this.binded = a, this.add("delay", 0), this.add("interrupt", "false") } function InteractionStopActionParams(a) { this.binded = a, this.add("delay", 0) } function InteractionPauseActionHandler() { InteractionPauseActionHandler.prototype.id = "pause", InteractionPauseActionHandler.prototype.displayName = "Pause", InteractionPauseActionHandler.prototype.param = InteractionPauseActionParams, InteractionPauseActionHandler.prototype.targetable = !0 } function InteractionStartActionHandler() { InteractionStartActionHandler.prototype.id = "start", InteractionStartActionHandler.prototype.displayName = "Start", InteractionStartActionHandler.prototype.param = InteractionStartActionParams, InteractionStartActionHandler.prototype.targetable = !0 } function InteractionStopActionHandler() { InteractionStopActionHandler.prototype.id = "stop", InteractionStopActionHandler.prototype.displayName = "Stop", InteractionStopActionHandler.prototype.param = InteractionStopActionParams, InteractionStopActionHandler.prototype.targetable = !0 } function EmailActionParams(a) { EmailActionParams.prototype.viewName = "Email", this.binded = a, this.add("recipient", ""), this.add("delay", 0), this.add("cc", ""), this.add("subject", ""), this.add("body", "") } function EmailActionHandler() { EmailActionHandler.prototype.id = "email", EmailActionHandler.prototype.displayName = "Email", EmailActionHandler.prototype.param = EmailActionParams } function RunJsActionHandler() { RunJsActionHandler.prototype.id = "runJs", RunJsActionHandler.prototype.displayName = "Run JavaScript", RunJsActionHandler.prototype.param = RunJsActionParams } function RunJsActionParams(a) { RunJsActionParams.prototype.viewName = "RunJs", this.binded = a, this.add("scriptString", ""), this.add("delay", 0), this.editorSession = { internal: !0 } } function ExpandCollapseActionParams(a) { this.binded = a, this.add("delay", 0) } function ExpandFullScreenActionParams(a) { ExpandFullScreenActionParams.prototype.viewName = "ExpandFullScreen", this.binded = a, this.add("delay", 0), this.addArray("assets", ActionParams.getAssetsHelper().createAssetsArray()), this.add("opacity", "70"), this.add("fillType", "solidColor"), this.add("solidColor", "#FFFFFF"), this.add("gradientFirstColor", "#FFFFFF"), this.add("gradientSecondColor", "#000000"), this.add("gradientPercent", "100"), this.add("showCloseButton", !0), this.add("closeButtonStyle", "default"), this.add("closeButtonPosition", "topRight"), this.configPropsData = { data: { bgImage: "expandFSBackground", closeBtnImage: "expandFSClose" }, internal: !0 } } function ExpandPushdownActionParams(a) { this.binded = a, this.add("delay", 0) } function ExpandActionHandler() { ExpandActionHandler.prototype.id = "expand", ExpandActionHandler.prototype.displayName = "Expand", ExpandActionHandler.prototype.param = ExpandCollapseActionParams, ExpandActionHandler.prototype.canRunInInterLoop = !1 } function ExpandFullScreenActionHandler() { ExpandFullScreenActionHandler.prototype.id = "expandFullScreen", ExpandFullScreenActionHandler.prototype.displayName = "Expand To Full Screen", ExpandFullScreenActionHandler.prototype.param = ExpandFullScreenActionParams, ExpandFullScreenActionHandler.prototype.canRunInInterLoop = !1 } function CollapseActionHandler() { CollapseActionHandler.prototype.id = "collapse", CollapseActionHandler.prototype.displayName = "Collapse", CollapseActionHandler.prototype.param = ExpandCollapseActionParams, CollapseActionHandler.prototype.canRunInInterLoop = !1 } function ExpandPushdownActionHandler() { ExpandPushdownActionHandler.prototype.id = "pushdown", ExpandPushdownActionHandler.prototype.displayName = "Pushdown", ExpandPushdownActionHandler.prototype.param = ExpandPushdownActionParams, ExpandPushdownActionHandler.prototype.canRunInInterLoop = !1 } Object.defineProperty(this, "INTERACTIONS_CONSTS", { writable: !1, configurable: !1, value: new function () { function a() { for (var a in c) Object.defineProperty(b, a, { configurable: !1, writable: !1, value: c[a] }); c = null } var b = this, c = { TARGET_SELF: "_Self", TARGET_TYPE_INTERACTION: "interaction" }; a() } }), window.Utils = window.Utils || {}, Utils.fixURL = function (a) { return 0 !== a.indexOf("http") ? "http://" + a : a }, Utils.stopPropagation = function (a) { a || (a = window.event), a.cancelBubble ? a.cancelBubble = !0 : a.stopPropagation() }, Utils.getInternetExplorerVersion = function () { var a = -1; if ("Microsoft Internet Explorer" == navigator.appName) { var b = navigator.userAgent, c = new RegExp("MSIE ([0-9]{1,}[.0-9]{0,})"); null != c.exec(b) && (a = parseFloat(RegExp.$1)) } return a }, Utils.getIntersection = function (a, b) { var c = {}; return c.intersect = !(a.right < b.left || b.right < a.left || a.bottom < b.top || b.bottom < a.top), c.intersect && (c.rect = { left: Math.max(a.left, b.left), top: Math.max(a.top, b.top), right: Math.min(a.right, b.right), bottom: Math.min(a.bottom, b.bottom) }), c }, Utils.isIOS = function () { return navigator.userAgent.match(/(iPad|iPhone|iPod)/g) ? !0 : !1 }, Timer.prototype = function () { var a = function () { this.played() && new Date - this.start <= this.remaining && (this.status = "paused", window.clearTimeout(this.timerId), this.remaining -= new Date - this.start) }, b = function () { !this.played() && this.remaining >= 0 && (this.status = "played", this.start = new Date, this.timerId = window.setTimeout(this.cb, this.remaining)) }, c = function () { window.clearTimeout(this.timerId), this.timerId = -1, this.start = "", this.remaining = this.delay, this.status = "" }, d = function () { return "played" === this.status }, e = function () { return "paused" === this.status }, f = function () { return this.remaining }; return { play: b, pause: a, paused: e, played: d, kill: c, remaining: f } }(), ActionParams.prototype.add = function (a, b) { this.binded ? this[a] = ko.observable(b) : this[a] = b }, ActionParams.prototype.addArray = function (a, b) { this.binded ? this[a] = ko.observableArray(b) : this[a] = b }, ActionParams.prototype.get = function (a) { return this.binded && this[a] ? this[a]() : this[a] }, ActionParams.prototype.getInt = function (a) { return this.get(a) ? parseInt(this.get(a), 10) || 0 : 0 }, ActionParams.prototype.getEndTime = function () { var a = this.getInt("delay"), b = this.getInt("duration"); return a + b }, ActionParams.prototype.getAssets = function () { var a = this.get("assets"); return void 0 !== a ? a : [] }, ActionParams.prototype.set = function (a, b) { this.binded ? this[a](b) : this[a] = b }, ActionParams.prototype.getJSON = function (a) { var b = {}; b.version = this.version; for (var c in this) if ("function" == typeof this[c] && ko.isObservable(this[c]) && !this[c].internal) { var d = this.get(c); b[c] = "function" == typeof d.getJSON ? d.getJSON(a) : d } return b }, ActionParams.prototype.getConfigJSON = function (a) { var b = {}; b.version = this.version; for (var c in this) if ("function" == typeof this[c] && ko.isObservable(this[c]) && !this[c].internal) { var d = this.get(c); b[c] = "function" == typeof d.getConfigJSON ? d.getConfigJSON(a, this.configPropsData.data) : d } return b }, ActionParams.prototype.initFromJSON = function (a) { this.version = a.version; var b; if (this.binded) for (b in this) "undefined" != typeof a[b] && "function" == typeof this[b] && ko.isObservable(this[b]) && ("function" == typeof this[b]().initFromJSON ? this[b]().initFromJSON(a[b]) : this[b](a[b])); else for (b in this) "binded" !== b && "version" !== b && "function" != typeof this[b] && (this[b] = a[b]) }, ActionParams.prototype.copy = function () { var a = new this.constructor(!0); for (var b in this) "function" == typeof this[b] && ko.isObservable(this[b]) && ("function" == typeof a[b]().copy ? a[b]().copy(this[b]()) : a[b](this[b]())); return a }, ActionParams.setAssetsHelper = function (a) { ActionParams.assetsHelper = a }, ActionParams.getAssetsHelper = function () { return ActionParams.assetsHelper }, ActionHandler.prototype.init = function () { }, ActionHandler.prototype.prepare = function () { }, ActionHandler.prototype.play = function (a, b, c, d) { var e = a.getActionParams(), f = a.getActionTarget(), g = a.getActionRefereance(); if (g && g.paused()) return g.play(), g; if (a.executed) return void this.onComplete(c); if (e.validate() && !a.getActionRefereance()) if (a.executed = !0, 0 === e.get("delay")) { var h = d.call(this, e, f); h && this.onComplete(c) } else { var i = this; g = new Timer(function () { var a = d.call(i, e, f); a && i.onComplete(c) }, e.get("delay")), a.actionRef = g } return g }, ActionHandler.prototype.pause = function (a) { var b = a.getActionRefereance(); b && b.played() && b.pause() }, ActionHandler.prototype.stop = function (a) { a.getActionHandler().returnToOriginState(a) }, ActionHandler.prototype.getParams = function (a) { return this.param ? new this.param(a) : null }, ActionHandler.prototype.returnToOriginState = function (a) { a.getActionRefereance() && (a.getActionRefereance().kill(), a.actionRef = null), a.executed = !1 }, ActionHandler.prototype.onComplete = function (a) { void 0 !== a && a(this) }; var ActionHandlersFactory = new function () { function a(a, c) { b[c.id] = c } var b = {}; this.getActionHandler = function (a) { var c = a.split("."); return b[c[0]].getActionHandler(c[1]) }, this.getDesc = function () { var a = []; for (var c in b) a.push(b[c].getDesc()); return a }, $(window).bind("registerActionGroupEvent", a) }; ActionsGroup.prototype.getActionHandler = function (a) { return this.actionsHandlers[a] }, ActionsGroup.prototype.addHandler = function (a) { var b = new a; this.actionsHandlers[b.id] = b }, ActionsGroup.prototype.getDesc = function () { var a = { text: this.displayName, children: [] }; for (var b in this.actionsHandlers) a.children.push({ text: this.actionsHandlers[b].displayName, id: this.id + "." + this.actionsHandlers[b].id }); return a }, GotoURLActionParams.prototype = new ActionParams("1.0.0"), GotoURLActionParams.prototype.constructor = GotoURLActionParams, GotoURLActionParams.prototype.validate = function () { var a = this.get("target"), b = this.get("width"), c = this.get("height"); return ("newWindow" === a || "curWindow" === a || "newTab" === a) && void 0 !== this.get("left") && void 0 !== this.get("top") && void 0 !== b && void 0 !== c && void 0 !== this.get("closeAllAdParts") && this.get("delay") >= 0 }, GotoURLActionHandler.prototype = new ActionHandler, GotoURLActionHandler.prototype.execute = function (a, b, c) { return ActionHandler.prototype.play.call(this, a, b, c, this.gotoURL) }, GotoURLActionHandler.prototype.gotoURL = function (a, b) { var c = a.get("target"), d = a.get("url"), e = Utils.fixURL(d); if ("undefined" != typeof EB && EB && EB._adConfig) { var f = { jumpUrl: e, windowWasOpen: !0, clickInt: { target: "curWindow" === c ? "_self" : "_blank", yPos: "newTab" === c ? "" : parseInt(a.get("top")), xPos: "newTab" === c ? "" : parseInt(a.get("left")), width: "newTab" === c ? "" : parseInt(a.get("width")), height: "newTab" === c ? "" : parseInt(a.get("height")), showAddressBar: a.get("location"), showMenuBar: a.get("menubar") } }; return "curWindow" === c ? void window.open(e, "_top") : (EB._openWindowOrRedirect(f), a.get("closeAllAdParts") && $(window).trigger("closeAllAdPartsEvent"), !0) } return "newWindow" === c ? (window.open(e, "_blank", " location=" + (a.get("location") ? "yes" : "no") + ", menubar=" + (a.get("menubar") ? "yes" : "no") + ", left=" + a.get("left") + ", top=" + a.get("top") + ", width=" + a.get("width") + ", height=" + a.get("height")), a.get("closeAllAdParts") && $(window).trigger("closeAllAdPartsEvent"), !0) : (window.open(e), !0) }, CustomClickThroughActionParams.prototype = new GotoURLActionParams, CustomClickThroughActionParams.prototype.constructor = CustomClickThroughActionParams, CustomClickThroughActionHandler.prototype = new GotoURLActionHandler, CustomClickThroughActionHandler.prototype.gotoURL = function (a, b) { var c = this, d = { fClick: !0, fClose: a.get("closeAllAdParts"), jumpUrl: a.get("url"), target: a.get("target"), height: "newTab" === a.get("target") ? void 0 : parseInt(a.get("height"), 10), width: "newTab" === a.get("target") ? void 0 : parseInt(a.get("width"), 10), xPos: "newTab" === a.get("target") ? void 0 : parseInt(a.get("left"), 10), yPos: "newTab" === a.get("target") ? void 0 : parseInt(a.get("top"), 10) }; return $(window).trigger("customClickThroughEvent", { name: a.get("name"), url: a.get("url"), ctObj: d, caller: c, params: a }), a.get("closeAllAdParts") && $(window).trigger("closeAllAdPartsEvent"), !0 }, TriggerCTActionParams.prototype = new ActionParams("1.0.0"), TriggerCTActionParams.prototype.constructor = TriggerCTActionParams, TriggerCTActionParams.prototype.validate = function () { return this.get("delay") >= 0 }, TriggerCTActionHandler.prototype = new ActionHandler, TriggerCTActionHandler.prototype.execute = function (a, b, c) { return ActionHandler.prototype.play.call(this, a, b, c, this.triggerCT) }, TriggerCTActionHandler.prototype.triggerCT = function (a, b) { return $(window).trigger("clickThroughEvent"), !0 }, CustInterActionParams.prototype = new ActionParams("1.0.0"), CustInterActionParams.prototype.constructor = CustInterActionParams, CustInterActionParams.prototype.validate = function () { return $.trim(this.get("name")) }, CustInterActionHandler.prototype = new ActionHandler, CustInterActionHandler.prototype.execute = function (a, b, c) { return ActionHandler.prototype.play.call(this, a, b, c, this.custInter) }, CustInterActionHandler.prototype.custInter = function (a, b) { return $(window).trigger("customInteractionEvent", a.get("name")), !0 }, function () { function a() { this.addHandler(TriggerCTActionHandler), this.addHandler(CustomClickThroughActionHandler), this.addHandler(CustInterActionHandler), this.addHandler(GotoURLActionHandler) } a.prototype = new ActionsGroup("urlActions", "URL Actions"), $(window).trigger("registerActionGroupEvent", new a) }(), VideoActionParams.prototype = new ActionParams("1.0.0"), VideoActionParams.prototype.constructor = VideoActionParams, VideoActionParams.prototype.validate = function () { return this.get("delay") >= 0 }, VideoPlayActionHandler.prototype = new ActionHandler, VideoPlayActionHandler.prototype.execute = function (a, b, c) { var d = a.getActionParams(), e = a.getActionTarget(), f = $("#" + e + " video"); return d.get("delay") >= 0 && 0 === f[0].currentTime && f[0].load(), ActionHandler.prototype.play.call(this, a, b, c, this.videoPlay) }, VideoPlayActionHandler.prototype.videoPlay = function (a, b) { var c = $("#" + b + " video"); return c && c[0] ? (c[0].play(), !0) : void 0 }, VideoStopActionHandler.prototype = new ActionHandler, VideoStopActionHandler.prototype.execute = function (a, b, c) { return ActionHandler.prototype.play.call(this, a, b, c, this.videoStop) }, VideoStopActionHandler.prototype.videoStop = function (a, b) { var c = $("#" + b + " video"); return c && c[0] ? (c[0].pause(), c[0].currentTime = 0, !0) : void 0 }, VideoPauseActionHandler.prototype = new ActionHandler, VideoPauseActionHandler.prototype.execute = function (a, b, c) { return ActionHandler.prototype.play.call(this, a, b, c, this.videoPause) }, VideoPauseActionHandler.prototype.videoPause = function (a, b) { var c = $("#" + b + " video"); return c && c[0] ? (c[0].pause(), !0) : void 0 }, VideoReplayActionHandler.prototype = new ActionHandler, VideoReplayActionHandler.prototype.execute = function (a, b, c) { return ActionHandler.prototype.play.call(this, a, b, c, this.videoReplay) }, VideoReplayActionHandler.prototype.videoReplay = function (a, b) { var c = $("#" + b + " video"); return c && c[0] ? (c[0].currentTime = 0, c[0].play(), !0) : void 0 }, VideoMuteActionHandler.prototype = new ActionHandler, VideoMuteActionHandler.prototype.execute = function (a, b, c) { return ActionHandler.prototype.play.call(this, a, b, c, this.mute) }, VideoMuteActionHandler.prototype.mute = function (a, b) { var c = $("#" + b + " video"); return c && c[0] ? (c[0].muted = !0, !0) : void 0 }, VideoUnmuteActionHandler.prototype = new ActionHandler, VideoUnmuteActionHandler.prototype.execute = function (a, b, c) { return ActionHandler.prototype.play.call(this, a, b, c, this.unmute) }, VideoUnmuteActionHandler.prototype.unmute = function (a, b) { var c = $("#" + b + " video"); return c && c[0] ? (c[0].muted = !1, !0) : void 0 }, function () { function a() { this.addHandler(VideoPlayActionHandler), this.addHandler(VideoStopActionHandler), this.addHandler(VideoPauseActionHandler), this.addHandler(VideoReplayActionHandler), this.addHandler(VideoMuteActionHandler), this.addHandler(VideoUnmuteActionHandler) } a.prototype = new ActionsGroup("videoActions", "Video Actions"), $(window).trigger("registerActionGroupEvent", new a) }(), CallNumberActionParams.prototype = new ActionParams("1.0.0"), CallNumberActionParams.prototype.constructor = CallNumberActionParams, CallNumberActionParams.prototype.validate = function () { return $.trim(this.get("number")) }, CallNumberActionHandler.prototype = new ActionHandler, CallNumberActionHandler.prototype.execute = function (a, b, c) { return ActionHandler.prototype.play.call(this, a, b, c, this.callNumber) }, CallNumberActionHandler.prototype.callNumber = function (a, b) { var c = "tel:" + a.get("number"), d = { jumpUrl: c, windowWasOpen: !0 }; if ("undefined" != typeof EB && EB && EB.getSDKData()) { var d = { jumpUrl: c, windowWasOpen: !0 }; EB._openWindowOrRedirect(d) } else window.open(c); return !0 }, SMSNumberActionParams.prototype = new ActionParams("1.0.0"), SMSNumberActionParams.prototype.constructor = SMSNumberActionParams, SMSNumberActionParams.prototype.validate = function () { return $.trim(this.get("number")) }, SMSNumberActionHandler.prototype = new ActionHandler, SMSNumberActionHandler.prototype.execute = function (a, b, c) { var d = a.getActionParams(), e = d.get("fallbackToEmail"); return e && Utils.isIOS() ? void EmailActionHandler.prototype.execute(a, b, c) : ActionHandler.prototype.play.call(this, a, b, c, this.smsNumber) }, SMSNumberActionHandler.prototype.smsNumber = function (a, b) { var c = "sms:" + a.get("number"); if (Utils.isIOS() || (c += "?body=" + a.get("body")), "undefined" != typeof EB && EB && EB.getSDKData()) { var d = { jumpUrl: c, windowWasOpen: !0 }; EB._openWindowOrRedirect(d) } else window.open(c); return !0 }, InteractionPauseActionParams.prototype = new ActionParams("1.0.0"), InteractionPauseActionParams.prototype.constructor = InteractionPauseActionParams, InteractionPauseActionParams.prototype.validate = function () { return this.get("delay") >= 0 }, InteractionStartActionParams.prototype = new ActionParams("1.0.0"), InteractionStartActionParams.prototype.constructor = InteractionStartActionParams, InteractionStartActionParams.prototype.validate = function () { return this.get("delay") >= 0 }, InteractionStopActionParams.prototype = new ActionParams("1.0.0"), InteractionStopActionParams.prototype.constructor = InteractionStopActionParams, InteractionStopActionParams.prototype.validate = function () { return this.get("delay") >= 0 }, InteractionPauseActionHandler.prototype = new ActionHandler, InteractionPauseActionHandler.prototype.execute = function (a, b, c) { return ActionHandler.prototype.play.call(this, a, b, c, this.pause) }, InteractionPauseActionHandler.prototype.pause = function (a, b) { return InteractionsMgr.pauseInteraction(b), !0 }, InteractionStartActionHandler.prototype = new ActionHandler, InteractionStartActionHandler.prototype.execute = function (a, b, c) { return ActionHandler.prototype.play.call(this, a, b, c, this.start) }, InteractionStartActionHandler.prototype.start = function (a, b) { return InteractionsMgr.startInteraction(b, a.get("interrupt")), !0 }, InteractionStopActionHandler.prototype = new ActionHandler, InteractionStopActionHandler.prototype.execute = function (a, b, c) { return ActionHandler.prototype.play.call(this, a, b, c, this.stop) }, InteractionStopActionHandler.prototype.stop = function (a, b) { return InteractionsMgr.stopInteraction(b), !0 }, EmailActionParams.prototype = new ActionParams("1.0.0"), EmailActionParams.prototype.constructor = EmailActionParams, EmailActionParams.prototype.validate = function () { return $.trim(this.get("recipient")) }, EmailActionHandler.prototype = new ActionHandler, EmailActionHandler.prototype.execute = function (a, b, c) { return ActionHandler.prototype.play.call(this, a, b, c, this.email) }, EmailActionHandler.prototype.email = function (a, b) { var c = $.trim(a.get("cc")), d = a.get("subject"), e = a.get("body"), f = "mailto:" + $.trim(a.get("recipient")) + (c ? "?cc=" + c + "&" : "?") + (d ? "subject=" + d + "&" : "") + (e ? "body=" + e : ""); if ("undefined" != typeof EB && EB && EB.getSDKData()) { var g = { jumpUrl: f, windowWasOpen: !0 }; EB._openWindowOrRedirect(g) } else window.open(f); return !0 }, function () { function a() { this.addHandler(CallNumberActionHandler), this.addHandler(SMSNumberActionHandler), this.addHandler(EmailActionHandler) } a.prototype = new ActionsGroup("mobileActions", "Mobile Actions"), $(window).trigger("registerActionGroupEvent", new a) }(), RunJsActionHandler.prototype = new ActionHandler, RunJsActionHandler.prototype.execute = function (a, b, c) { return ActionHandler.prototype.play.call(this, a, b, c, this.runJs) }, RunJsActionHandler.prototype.runJs = function (a, b) { var c = RunJsActionHandler.prototype.runScript(a, b); return c === !0 ? !0 : void 0 }, RunJsActionHandler.prototype.runScript = function (params, target) { var script = params.get("scriptString"); script = "(function () {\n" + script + "\n} )()"; try { return eval(script), !0 } catch (e) { console.log(e) } }, RunJsActionParams.prototype = new ActionParams("1.0.0"), RunJsActionParams.prototype.constructor = RunJsActionParams, RunJsActionParams.prototype.validate = function () { return $.trim(this.get("scriptString")) }, function () { function a() { this.addHandler(RunJsActionHandler) } a.prototype = new ActionsGroup("customActions", "Custom Actions"), $(window).trigger("registerActionGroupEvent", new a) }(), ExpandCollapseActionParams.prototype = new ActionParams("1.0.0"), ExpandCollapseActionParams.prototype.constructor = ExpandCollapseActionParams, ExpandCollapseActionParams.prototype.validate = function () { return this.get("delay") >= 0 }, ExpandFullScreenActionParams.prototype = new ActionParams("1.0.0"), ExpandFullScreenActionParams.prototype.constructor = ExpandFullScreenActionParams, ExpandFullScreenActionParams.prototype.validate = function () { var a = this.get("opacity").replace("%", ""), b = this.get("closeButtonPosition"), c = this.get("fillType"), d = this.get("gradientPercent"); return this.get("delay") >= 0 && a >= 0 && 100 >= a && ("solidColor" === c || "gradientColor" === c || "image" === c) && ("topLeft" === b || "topRight" === b || "bottomLeft" === b || "bottomRight" === b) && d >= 0 && 200 >= d }, ExpandPushdownActionParams.prototype = new ActionParams("1.0.0"), ExpandPushdownActionParams.prototype.constructor = ExpandPushdownActionParams, ExpandPushdownActionParams.prototype.validate = function () { return this.get("delay") >= 0 }, ExpandActionHandler.prototype = new ActionHandler, ExpandActionHandler.prototype.execute = function (a, b, c) { return ActionHandler.prototype.play.call(this, a, b, c, this.expand) }, ExpandActionHandler.prototype.expand = function (a, b) { return $(window).trigger("expandEvent", b), !0 }, ExpandActionHandler.prototype.onComplete = function (a) { ActionHandler.prototype.onComplete.call(this, a) }, ExpandFullScreenActionHandler.prototype = new ActionHandler, ExpandFullScreenActionHandler.prototype.execute = function (a, b, c) { return ActionHandler.prototype.play.call(this, a, b, c, this.expandFullScreen) }, ExpandFullScreenActionHandler.prototype.expandFullScreen = function (a, b) { var c = { target: b, fillType: a.fillType, opacity: a.opacity.replace("%", ""), solidColor: a.solidColor, gradientFirstColor: a.gradientFirstColor, gradientSecondColor: a.gradientSecondColor, gradientPercent: a.gradientPercent, assets: a.assets, showCloseBtn: a.showCloseButton, closeBtnPos: a.closeButtonPosition, closeBtnStyle: a.closeButtonStyle }; return $(window).trigger("expandFullScreenEvent", c), !0 }, ExpandFullScreenActionHandler.prototype.onComplete = function (a) { ActionHandler.prototype.onComplete.call(this, a) }, CollapseActionHandler.prototype = new ActionHandler, CollapseActionHandler.prototype.execute = function (a, b, c) { return ActionHandler.prototype.play.call(this, a, b, c, this.collapse) }, CollapseActionHandler.prototype.collapse = function (a, b) { return $(window).trigger("collapseEvent", b), !0 }, CollapseActionHandler.prototype.onComplete = function (a) { ActionHandler.prototype.onComplete.call(this, a) }, ExpandPushdownActionHandler.prototype = new ActionHandler, ExpandPushdownActionHandler.prototype.execute = function (a, b, c) { return ActionHandler.prototype.play.call(this, a, b, c, this.pushdown) }, ExpandPushdownActionHandler.prototype.pushdown = function (a, b) { return $(window).trigger("expandPushdownEvent", b), !0 }, ExpandPushdownActionHandler.prototype.onComplete = function (a) { ActionHandler.prototype.onComplete.call(this, a) }, function () { function a() { this.addHandler(ExpandActionHandler), this.addHandler(ExpandFullScreenActionHandler), this.addHandler(CollapseActionHandler), this.addHandler(ExpandPushdownActionHandler) } a.prototype = new ActionsGroup("expandable", "Expandable"), $(window).trigger("registerActionGroupEvent", new a) }(), function () { function a() { this.addHandler(InteractionPauseActionHandler), this.addHandler(InteractionStartActionHandler), this.addHandler(InteractionStopActionHandler) } a.prototype = new ActionsGroup("sequence", "Sequence"), $(window).trigger("registerActionGroupEvent", new a) }();